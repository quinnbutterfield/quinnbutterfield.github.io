{"version":3,"sources":["components/services/communication.js","components/PhonebookApp.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","isError","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","width","style","Person","person","deleteFunc","name","number","onClick","Persons","persons","filterBy","del","window","confirm","filter","toLowerCase","includes","map","key","PersonForm","addPerson","nameChange","numChange","onSubmit","text","value","onChange","type","FormInput","Filter","filterFunc","PhonebookApp","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterBy","headerMessage","setHeaderMessage","isErrorMessage","setIsErrorMessage","useEffect","phoneService","initialPersons","infoHeader","setTimeout","event","target","preventDefault","some","p","find","changedPerson","returnedPerson","catch","error","updateNumber","concat","r","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0840be26.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteEntry = id => {\n\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}   \n\n\nexport default { getAll, create, deleteEntry, update }","import React, { useState, useEffect } from 'react'\nimport phoneService from './services/communication'\n\nconst PhonebookApp = () => {\n\n\n    const [persons, setPersons] = useState([\n        //{ name: 'Arto Hellas' }\n    ])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterBy, setFilterBy] = useState('')\n    const [headerMessage, setHeaderMessage] = useState(null)\n    const [isErrorMessage, setIsErrorMessage] = useState(false)\n\n    const hook = () => {\n\n        phoneService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }\n    useEffect(hook, [])\n\n    const deleteEntry = id => {\n        phoneService\n            .deleteEntry(id)\n            .then(r => {\n\n                phoneService\n                    .getAll()\n                    .then(newPersons => {\n                        setPersons(newPersons)\n                    })\n\n\n            })\n\n\n    }\n\n    const updateNumber = (name, newNumber) => {\n\n        const person = persons.find(p => p.name === name)\n        const changedPerson = { ...person, number: newNumber }\n        phoneService\n            .update(person.id, changedPerson)\n            .then(returnedPerson => {\n\n                setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n                setNewNumber('')\n\n            }).catch(error => {\n\n                infoHeader(`${name} was already deleted from the server`, true)\n                setPersons(persons.filter(p => p.name !== name))\n\n            })\n\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const person = {\n            name: newName,\n            number: newNumber\n        }\n        if (persons.some(p => p.name === newName)) {\n            if(window.confirm(`${newName} is already added to the phonebook, replace the older number with a new one?`)){\n                updateNumber(newName, newNumber)\n                infoHeader(`Updated ${newName}'s number`, false)\n            }\n           \n        }\n        else {\n\n            phoneService\n                .create(person)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                })\n            infoHeader(`Added ${newName}`, false)\n        }\n\n    }\n\n    const infoHeader = (text, isError) => {\n\n        setIsErrorMessage(isError)\n        setHeaderMessage(text)\n        setNewName('')\n        setNewNumber('')\n        setTimeout(() => {\n            setHeaderMessage(null)\n        }, 5000)\n\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        setFilterBy(event.target.value)\n    }\n\n\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification message={headerMessage} isError={isErrorMessage} />\n            <Filter filterBy={filterBy} filterFunc={handleFilterChange} />\n            <h3>add a new</h3>\n            <PersonForm\n                addPerson={addPerson}\n                name={newName}\n                number={newNumber}\n                nameChange={handleNameChange}\n                numChange={handleNumberChange}\n\n            />\n\n            <h3>Numbers</h3>\n            <Persons persons={persons} filterBy={filterBy} deleteFunc={deleteEntry} />\n        </div>\n    )\n}\n\n\nconst Notification = ({ message, isError }) => {\n\n    let errorStyle = {\n\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n        width: 400\n\n\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    if (!isError) {\n\n        errorStyle = { ...errorStyle, color: 'green' }\n        //errorStyle.color = 'green'\n    }\n\n    return (\n        <div style={errorStyle}>\n            {message}\n        </div>\n    )\n\n}\n\nconst Person = ({ person, deleteFunc }) => {\n    return (\n\n        <div>\n            <p>{person.name} {person.number} <button onClick={deleteFunc}>delete</button> </p>\n\n        </div>\n    )\n\n}\n\nconst Persons = ({ persons, filterBy, deleteFunc }) => {\n\n    const del = (name, id) => {\n\n        if(window.confirm(`Are you sure you want to delete ${name}?`)) {deleteFunc(id)}\n\n    }\n\n    return (\n        <div>\n            {persons.filter(person => person.name.toLowerCase().includes(\n                filterBy.toLowerCase()))\n                .map((person) =>\n                    <Person key={person.name} person={person} deleteFunc={\n                        () => del(person.name, person.id)\n                    } />\n                )}\n\n        </div>\n    )\n\n\n}\nconst PersonForm = ({ addPerson, name, number, nameChange, numChange }) => {\n    return (\n\n        <form onSubmit={addPerson}>\n\n            <FormInput text={'name: '} value={name} onChange={nameChange} />\n            <FormInput text={'number: '} value={number} onChange={numChange} />\n\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n\n    )\n}\n\nconst FormInput = ({ text, value, onChange }) => {\n    return (\n        <div>\n            {text}\n            <input\n                value={value}\n                onChange={onChange}\n            />\n\n        </div>\n\n\n\n    )\n}\n\nconst Filter = ({ filterBy, filterFunc }) => {\n    return (\n        <div>\n            filter names:\n            <input\n                value={filterBy}\n                onChange={filterFunc}\n            />\n\n        </div>\n    )\n}\n\nexport default PhonebookApp","import React from 'react'\nimport ReactDOM from 'react-dom'\n//import CountriesApp from './components/CountriesApp'\nimport PhonebookApp from './components/PhonebookApp'\n//import App from './components/App'\nimport './index.css'\n\nReactDOM.render(\n\n    <PhonebookApp />,\n    document.getElementById('root')\n)"],"sourceRoot":""}